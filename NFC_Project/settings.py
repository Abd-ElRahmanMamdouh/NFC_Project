"""
Django settings for NFC_Project project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-1yggt3lv1!@izv-kd9)rrt&%7^i6^uwdbhqddr2l(wae7+!p0_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Installed Packages
    'jazzmin',
    'crispy_forms',
    'crispy_bootstrap5',
    'import_export',

    # Project Apps
    'users.apps.UsersConfig',
    'cards.apps.CardsConfig',
    'settings.apps.SettingsConfig',
    'archive.apps.ArchiveConfig',

    # at the end to apply jazzmin theme
    'django.contrib.admin',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'users.middleware.TokenAuthMiddleware',
]

ROOT_URLCONF = 'NFC_Project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.current_year',
            ],
        },
    },
]

WSGI_APPLICATION = 'NFC_Project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
# else: # Production
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.postgresql_psycopg2',
#             'NAME': config['DB_NAME'],
#             'USER': config['DB_USER'],
#             'PASSWORD': config['DB_PASS'],
#             'HOST': 'localhost',
#             'PORT': '',
#         }
#     }


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en'


TIME_ZONE = 'Asia/Riyadh'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

STATIC_ROOT = BASE_DIR / 'staticfiles'

MEDIA_ROOT = BASE_DIR / 'media'

MEDIA_URL = '/media/'


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Emailing system

if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' 

if DEBUG:
    DEFAULT_FROM_EMAIL = "Era coding <abelrahmantest@gmail.com>"
    EMAIL_PORT = 587
    EMAIL_USE_TLS = True


# Styling Messages with sweet alert
from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.DEBUG: 'question',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'error',
}

MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'


# Custom Usersettings
AUTH_USER_MODEL = 'users.CustomUser'
LOGIN_URL = 'users:login'
#LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = 'users:login'
AUTHENTICATION_BACKENDS = ['users.backends.EmailBackend']

# Crispy settings
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"
CRISPY_FAIL_SILENTLY = not DEBUG

# Import Export Settings
IMPORT_EXPORT_USE_TRANSACTIONS = True
from import_export.formats.base_formats import CSV, XLSX
IMPORT_EXPORT_FORMATS = [
    CSV,
    XLSX,
]

# Jazzmin Settings
JAZZMIN_SETTINGS = {
    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "Admin",
    # Title on the brand, and login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "Chipper Group",
    "site_brand": "Chipper Group",

    # square logo to use for your site, must be present in static files, used for favicon and brand on top left
    "site_logo": "img/favicon.ico",

    # Welcome text on the login screen
    "welcome_sign": "Admin Panel",

    # Copyright on the footer
    "copyright": "<a href='/' target='_blank'>Chipper Group</a>",

    # The model admin to search from the search bar, search bar omitted if excluded
    #"search_model": "auth.User",

    # Field name on user model that contains avatar image
    "user_avatar": "image",

    ############
    # Top Menu #
    ############

    # Links to put along the top menu
    "topmenu_links": [

        # Url that gets reversed (Permissions can be added)
        {"name": "Home",  "url": "admin:index", "permissions": ["auth.view_user"]},

        # external url that opens in a new window (Permissions can be added)
        #{"name": "Support", "url": "https://github.com/farridav/django-jazzmin/issues", "new_window": True},

        # model admin to link to (Permissions checked against model)
        {"model": "auth.User"},

        # App with dropdown menu to all its models pages (Permissions checked against models)
        #{"app": "books"},
    ],

    #############
    # User Menu #
    #############

    # Additional links to include in the user menu on the top right ("app" url type is not allowed)
    "usermenu_links": [
        {"name": "View Site", "url": "/", "icon": 'fas fa-chart-bar'},
    ],

    #############
    # Side Menu #
    #############

    # Whether to display the side menu
    "show_sidebar": True,

    # Whether to aut expand the menu
    "navigation_expanded": False,

    # Hide these apps when generating side menu e.g (auth)
    "hide_apps": ["auth"],

    # Hide these models when generating side menu (e.g auth.user)
    "hide_models": ["archive.Archive"],

    # List of apps (and/or models) to base side menu ordering off of (does not need to contain all apps/models)
    "order_with_respect_to": ["users", "cards", "cards.URLBatch", "cards.NFCCard", "settings", "archive"], #"books.author", "books.book"],

    # Custom links to append to app groups, keyed on app name
    "custom_links": {
        "cards": [
            {"name": "URL Generator", 
            "url": "admin:url_bulk", 
            "icon": "fas fa-magic",
            "permissions": ["cards.add_nfccard"]},
            {"name": "Code Generator", 
            "url": "admin:code_bulk", 
            "icon": "fas fa-magic",
            "permissions": ["cards.delete_urlbatch"]},
        ],
    },

    # Custom icons for side menu apps/models See https://fontawesome.com/icons?d=gallery&m=free
    # for a list of icon classes
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "users.CustomUser": "fas fa-users",
        "users.AuthToken": "fas fa-users",
        "settings.ProductGroup": "fas fa-shopping-bag",
        "settings.LinkDuration": "fas fa-stopwatch",
        "cards.NFCCard": "fas fa-credit-card",
        "cards.PurchasingCode": "fas fa-dollar-sign",
        "cards.URLBatch": "far fa-file-archive",
        "cards.CodeBatch": "far fa-file-archive",
        "archive.URLBatchArchived": "fas fa-archive",
        "archive.CodeBatchArchived": "fas fa-archive",
    },
    # Icons that are used when one is not manually specified
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-dot-circle",

    #################
    # Related Modal #
    #################
    # Use modals instead of popups
    "related_modal_active": True,

    #############
    # UI Tweaks #
    #############
    # Relative paths to custom CSS/JS scripts (must be present in static files)
    "custom_css": 'css/custom_admin.css',
    "custom_js": None,
    # Whether to show the UI customizer on the sidebar
    "show_ui_builder": False,

    ###############
    # Change view #
    ###############
    # Render out the change view as a single form, or in tabs, current options are
    # - single
    # - horizontal_tabs (default)
    # - vertical_tabs
    # - collapsible
    # - carousel
    "changeform_format": "horizontal_tabs",
    # override change forms on a per modeladmin basis
    "changeform_format_overrides": {"auth.group": "vertical_tabs"},
    # Add a language dropdown into the admin
    "language_chooser": False,
}

X_FRAME_OPTIONS = 'SAMEORIGIN'


# Django security 
# CORS_REPLACE_HTTPS_REFERER = bool(config['CORS_REPLACE_HTTPS_REFERER'])
# HOST_SCHEME = config['HOST_SCHEME']
# SECURE_SSL_REDIRECT = bool(config['SECURE_SSL_REDIRECT'])
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# SESSION_COOKIE_SECURE = bool(config['SESSION_COOKIE_SECURE'])
# CSRF_COOKIE_SECURE = bool(config['CSRF_COOKIE_SECURE'])
# SECURE_HSTS_INCLUDE_SUBDOMAINS = bool(config['SECURE_HSTS_INCLUDE_SUBDOMAINS'])
# SECURE_HSTS_PRELOAD = bool(config['SECURE_HSTS_PRELOAD'])
# SECURE_HSTS_SECONDS = 15768000
# SECURE_BROWSER_XSS_FILTER = True
# SECURE_CONTENT_TYPE_NOSNIFF = True